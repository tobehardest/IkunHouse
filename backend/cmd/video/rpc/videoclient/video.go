// Code generated by goctl. DO NOT EDIT.
// Source: video.proto

package videoclient

import (
	"context"
	"video_clip/cmd/video/rpc/video"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	UploadVideoReq = video.UploadVideoReq
	UploadVideoRes = video.UploadVideoRes

	Video interface {
		UploadVideo(ctx context.Context, in *UploadVideoReq, opts ...grpc.CallOption) (*UploadVideoRes, error)
	}

	defaultVideo struct {
		cli zrpc.Client
	}
)

func NewVideo(cli zrpc.Client) Video {
	return &defaultVideo{
		cli: cli,
	}
}

func (m *defaultVideo) UploadVideo(ctx context.Context, in *UploadVideoReq, opts ...grpc.CallOption) (*UploadVideoRes, error) {
	client := video.NewVideoClient(m.cli.Conn())
	return client.UploadVideo(ctx, in, opts...)
}
