// Code generated by goctl. DO NOT EDIT.
// Source: follow.proto

package followClient

import (
	"context"

	"video_clip/cmd/follow/rpc/follow"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	FollowReq       = follow.FollowReq
	FollowRes       = follow.FollowRes
	FolloweeItem    = follow.FolloweeItem
	FolloweeListReq = follow.FolloweeListReq
	FolloweeListRes = follow.FolloweeListRes
	FollowerItem    = follow.FollowerItem
	FollowerListReq = follow.FollowerListReq
	FollowerListRes = follow.FollowerListRes
	HasFollowedReq  = follow.HasFollowedReq
	HasFollowedRes  = follow.HasFollowedRes
	UnFollowReq     = follow.UnFollowReq
	UnFollowRes     = follow.UnFollowRes

	Follow interface {
		// 关注
		Follow(ctx context.Context, in *FollowReq, opts ...grpc.CallOption) (*FollowRes, error)
		// 取消关注
		UnFollow(ctx context.Context, in *UnFollowReq, opts ...grpc.CallOption) (*UnFollowRes, error)
		// 关注列表
		FolloweeList(ctx context.Context, in *FolloweeListReq, opts ...grpc.CallOption) (*FolloweeListRes, error)
		// 粉丝列表
		FollowerList(ctx context.Context, in *FollowerListReq, opts ...grpc.CallOption) (*FollowerListRes, error)
		// 是否已关注
		HasFollowed(ctx context.Context, in *HasFollowedReq, opts ...grpc.CallOption) (*HasFollowedRes, error)
	}

	defaultFollow struct {
		cli zrpc.Client
	}
)

func NewFollow(cli zrpc.Client) Follow {
	return &defaultFollow{
		cli: cli,
	}
}

// 关注
func (m *defaultFollow) Follow(ctx context.Context, in *FollowReq, opts ...grpc.CallOption) (*FollowRes, error) {
	client := follow.NewFollowClient(m.cli.Conn())
	return client.Follow(ctx, in, opts...)
}

// 取消关注
func (m *defaultFollow) UnFollow(ctx context.Context, in *UnFollowReq, opts ...grpc.CallOption) (*UnFollowRes, error) {
	client := follow.NewFollowClient(m.cli.Conn())
	return client.UnFollow(ctx, in, opts...)
}

// 关注列表
func (m *defaultFollow) FolloweeList(ctx context.Context, in *FolloweeListReq, opts ...grpc.CallOption) (*FolloweeListRes, error) {
	client := follow.NewFollowClient(m.cli.Conn())
	return client.FolloweeList(ctx, in, opts...)
}

// 粉丝列表
func (m *defaultFollow) FollowerList(ctx context.Context, in *FollowerListReq, opts ...grpc.CallOption) (*FollowerListRes, error) {
	client := follow.NewFollowClient(m.cli.Conn())
	return client.FollowerList(ctx, in, opts...)
}

// 是否已关注
func (m *defaultFollow) HasFollowed(ctx context.Context, in *HasFollowedReq, opts ...grpc.CallOption) (*HasFollowedRes, error) {
	client := follow.NewFollowClient(m.cli.Conn())
	return client.HasFollowed(ctx, in, opts...)
}
