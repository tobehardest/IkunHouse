syntax = "proto3";

package video;
option go_package="./video";

import public "google/protobuf/timestamp.proto";

// 上传视频方法
message UploadVideoRequest {
  string media = 1; // 视频路径
  string uid = 2;
  string title = 3;
  string cover_url = 4; // 封面路径
  double longitude = 5; // 经度
  double latitude = 6; // 纬度
  string Address = 7;
  repeated int64 tag_id = 8; // 标签id
  string VideoSha256 = 9; // 哈希值，判断视频是否重复
}

message UploadVideoResponse {
  int64 id = 1;
}

// 获得视频方法 -
message GetVideoRequest {
  string uid = 1; // 可扩展，获得好友相关视频以及其他
  string tag = 2; // 根据标签查找
  int64 count = 3; // 获得个数
  repeated int64 video_id = 4; // 已获得的video_id，避免推送重复的
}

message GetVideoResponse{
  repeated VideoModel video_list = 1;
}

message VideoModel {
  int64 id = 1;
  string uid = 2;
  string title = 3;
  string media = 4;
  string cover_url = 5;
  string read_count = 6;
  string address = 7;
  double longitude = 8;
  double latitude = 9;
  google.protobuf.Timestamp create_time = 10;
}

// 添加访问量
message AddReadCountRequest {
  int64 id = 1;
  string uid = 2;
  int64 count = 3;
}

message AddReadCountResponse{

}

//message AddCollectRequest {
//  string uid = 1;
//  int64 vid = 2;
//}
//
//message AddCollectResponse{
//
//}

//message GetCollectByVidRequest{
//  int64 vid = 1;
//}
//
//message GetCollectByVidResponse{
//  int64 vid = 1;
//  int64 collect_num = 2;
//}
//
//message GetCollectByUidRequest{
//  string uid = 1;
//}
//
//message GetCollectByUidResponse{
//  string uid = 1;
//  int64 collect_num = 2;
//}

// 获得所有类型
message GetTypeListRequest{

}

message GetTypeListResponse{
  repeated Type type_list = 1;
}

message Type {
  int64 id = 1;
  string name = 2;
}

message ExistVideoRequest {
  string videoHash256 = 1;
}

message ExistVideoResponse{
  bool exist = 1; // 是否存在
  string media = 2; // 视频链接(存在时才返回)
}

// TODO 获得附近的视频 - 根据经纬度计算

service Video {
  rpc UploadVideo(UploadVideoRequest) returns(UploadVideoResponse);
  rpc AddReadCount(AddReadCountRequest) returns(AddReadCountResponse);
  rpc GetVideoList(GetVideoRequest) returns(GetVideoResponse);
//  rpc AddCollect(AddCollectRequest) returns(AddCollectResponse);
//  rpc GetCollectByVid(GetCollectByVidRequest) returns(GetCollectByVidResponse);
//  rpc GetCollectByUid(GetCollectByUidRequest) returns(GetCollectByUidResponse);
  rpc GetTypeList(GetTypeListRequest) returns(GetTypeListResponse);
  rpc IfExistVideo(ExistVideoRequest) returns(ExistVideoResponse);
}
