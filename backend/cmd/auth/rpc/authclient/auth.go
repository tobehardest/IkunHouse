// Code generated by goctl. DO NOT EDIT.
// Source: auth.proto

package authclient

import (
	"context"

	"video_clip/cmd/auth/rpc/auth"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	LoginReq    = auth.LoginReq
	LoginRes    = auth.LoginRes
	RegisterReq = auth.RegisterReq
	RegisterRes = auth.RegisterRes

	Auth interface {
		// 注册接口
		Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterRes, error)
		// 登录接口
		Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginRes, error)
	}

	defaultAuth struct {
		cli zrpc.Client
	}
)

func NewAuth(cli zrpc.Client) Auth {
	return &defaultAuth{
		cli: cli,
	}
}

// 注册接口
func (m *defaultAuth) Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterRes, error) {
	client := auth.NewAuthClient(m.cli.Conn())
	return client.Register(ctx, in, opts...)
}

// 登录接口
func (m *defaultAuth) Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginRes, error) {
	client := auth.NewAuthClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}
