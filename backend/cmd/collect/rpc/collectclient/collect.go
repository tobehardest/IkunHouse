// Code generated by goctl. DO NOT EDIT.
// Source: collect.proto

package collectclient

import (
	"context"

	"video_clip/cmd/collect/rpc/collect"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CollectListReq = collect.CollectListReq
	CollectListRes = collect.CollectListRes
	CollectReq     = collect.CollectReq
	CollectRes     = collect.CollectRes

	Collect interface {
		// 收藏
		Collect(ctx context.Context, in *CollectReq, opts ...grpc.CallOption) (*CollectRes, error)
		// 收藏列表
		CollectList(ctx context.Context, in *CollectListReq, opts ...grpc.CallOption) (*CollectListRes, error)
	}

	defaultCollect struct {
		cli zrpc.Client
	}
)

func NewCollect(cli zrpc.Client) Collect {
	return &defaultCollect{
		cli: cli,
	}
}

// 收藏
func (m *defaultCollect) Collect(ctx context.Context, in *CollectReq, opts ...grpc.CallOption) (*CollectRes, error) {
	client := collect.NewCollectClient(m.cli.Conn())
	return client.Collect(ctx, in, opts...)
}

// 收藏列表
func (m *defaultCollect) CollectList(ctx context.Context, in *CollectListReq, opts ...grpc.CallOption) (*CollectListRes, error) {
	client := collect.NewCollectClient(m.cli.Conn())
	return client.CollectList(ctx, in, opts...)
}
